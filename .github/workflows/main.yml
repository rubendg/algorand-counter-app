---
name: CI

env:
  GENESIS: .github/workflows/sandbox/genesis/genesis.json

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test-application:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application
    steps:
      - working-directory: .
        run: |
          sudo apt-get update
          sudo apt-get install curl
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.4'
          cache: 'pip'
      - name: install dependencies
        run: |
          make setup-venv setup
      - name: lint
        run: source venv/bin/activate ; make lint
      - name: build
        run: source venv/bin/activate ; make build
      - name: Check cache for Docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: docker-layer-caching-${{ github.workflow }}-${{ hashFiles(env.GENESIS) }}-{hash}
          restore-keys: docker-layer-caching-${{ github.workflow }}-${{ hashFiles(env.GENESIS) }}-
      - name: setup algorand sandbox
        uses: lucasvanmol/algorand-sandbox-action@v1
        with:
          config: dev
      - name: integration test
        run: |
          source venv/bin/activate
          make integration-test
      - name: zip artifact
        run: zip release.zip ./build -r
      - uses: actions/upload-artifact@master
        with:
          name: application-release-artifact
          path: application/release.zip

  deploy-testnet:
    runs-on: ubuntu-latest
    environment: testnet
    concurrency: testnet
    defaults:
      run:
        working-directory: ./application
    needs:
      - build-and-test-application
    steps:
      - working-directory: .
        run: |
          sudo apt-get update
          sudo apt-get install curl
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.4'
          cache: 'pip'
      - name: install dependencies
        run: |
          make setup-venv setup
      - uses: actions/download-artifact@master
        with:
          name: application-release-artifact
          path: ./application
      - name: unzip artifact
        run: unzip release.zip
      - name: deploy to testnet
        env:
          SENDER_MNEMONIC: ${{ secrets.SENDER_MNEMONIC }}
        run: |
          source venv/bin/activate
          cat <<EOF > deploy.ini
          [testnet-algoexplorer]
          sender_mnemonic= ${SENDER_MNEMONIC}
          algod_address=https://node.testnet.algoexplorerapi.io
          EOF
          python tools/deploy.py --network=testnet-algoexplorer --descriptor ./build/deployment.json

  build-and-test-client:
    runs-on: ubuntu-latest
    needs:
      - build-and-test-application
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install
        run: npm ci
      - name: test
        run: npm test
      - name: build
        run: PUBLIC_URL="." npm run build
      - name: zip artifact
        run: zip release.zip ./build -r
      - uses: actions/upload-artifact@master
        with:
          name: client-release-artifact
          path: client/release.zip

  deploy-client:
    runs-on: ubuntu-latest
    needs:
      - build-and-test-client
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: client-release-artifact
          path: ./client
      - name: unzip artifact
        run: unzip ./release.zip
        working-directory: ./client
      - name: deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ./client/build
